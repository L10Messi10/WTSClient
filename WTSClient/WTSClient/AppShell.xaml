<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:WTSClient.Views"
       xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
       xmlns:forms="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
       Title="WTSClient"
       BackgroundColor="{StaticResource Primary_Soft_Light}"
       x:Class="WTSClient.AppShell">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary_Dark}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource TextSoftColor}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource Primary_Dark}"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="BackgroundColor" Value="LightBlue"></Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="White" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary_Dark}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource TextSoftColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates_1">
                            <VisualState x:Name="Normal_1">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary_Dark}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <pancakeView:PancakeView
                HorizontalOptions="FillAndExpand"
                IsClippedToBounds="true"
                VerticalOptions="FillAndExpand">
                <AbsoluteLayout>
                    <!--<forms:CachedImage Source="bg" AbsoluteLayout.LayoutBounds="0,0,1,1"
                                    AbsoluteLayout.LayoutFlags="All"
                                    HeightRequest="150" Aspect="AspectFill" />-->
                    <StackLayout Margin="0,0,0,0" Padding="25" AbsoluteLayout.LayoutBounds="0,0,1,1"
                                 AbsoluteLayout.LayoutFlags="All" Spacing="0"
                                 BackgroundColor="{StaticResource Primary_Dark}">
                        <Label
                            Margin="0,0,0,0"
                            FontSize="19" FontAttributes="Bold"
                            HorizontalOptions="CenterAndExpand"
                            Text="Datu Abdul Water and Sanitation Cooperative"
                            TextColor="White"
                            HorizontalTextAlignment="Center"
                            VerticalOptions="StartAndExpand" />
                        <forms:CachedImage Source="water_100" Margin="0,10,0,10" HeightRequest="50" HorizontalOptions="CenterAndExpand"/>
                    </StackLayout>
                </AbsoluteLayout>
            </pancakeView:PancakeView>

        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>
    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <FlyoutItem Title="Home" Icon="home.png">
        <ShellContent Route="ProfilePage" ContentTemplate="{DataTemplate local:HomePage}" />
    </FlyoutItem>
    <MenuItem IconImageSource="user.png" Text="Profile" StyleClass="MenuItemLayoutStyle" x:Name="itemuser"
              Clicked="Itemuser_OnClicked"/>
    <MenuItem IconImageSource="statistics.png" Text="Statistics" StyleClass="MenuItemLayoutStyle" x:Name="itemStat"
              Clicked="ItemStat_OnClicked"/>
    <MenuItem IconImageSource="about.png" Text="About" StyleClass="MenuItemLayoutStyle" x:Name="itemabout"
              Clicked="Itemabout_OnClicked"/>
    <MenuItem IconImageSource="list.png" Text="Browse" StyleClass="MenuItemLayoutStyle" x:Name="itembrowse"
              Clicked="Itembrowse_OnClicked"/>
    
    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem IconImageSource="logout" Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked"/>

        <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
